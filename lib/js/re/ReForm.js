// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var Caml_array  = require("bs-platform/lib/js/caml_array.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

function Create(Config) {
  var component = ReasonReact.reducerComponent("ReForm");
  var make = function (onSubmit, validate, children) {
    var newrecord = component.slice();
    newrecord[/* render */9] = (function (self) {
        var handleChange = function (field) {
          return Curry._1(self[/* reduce */1], (function (value) {
                        return /* `handleChange */[
                                94287672,
                                /* tuple */[
                                  field,
                                  value
                                ]
                              ];
                      }));
        };
        var handleValidation = Curry._1(self[/* reduce */1], (function (error) {
                return /* `handleError */[
                        628324096,
                        error
                      ];
              }));
        var handleFormSubmit = Curry._1(self[/* reduce */1], (function () {
                return /* handleSubmit */-399344160;
              }));
        var handleSubmit = function () {
          var validationError = Curry._1(validate, self[/* state */2][/* values */0]);
          Curry._1(handleValidation, validationError);
          var match = +(validationError === /* None */0);
          if (match !== 0) {
            return Curry._1(handleFormSubmit, /* () */0);
          } else {
            return /* () */0;
          }
        };
        return Curry._3(Caml_array.caml_array_get(children, 0), self[/* state */2], handleChange, handleSubmit);
      });
    newrecord[/* initialState */10] = (function () {
        return /* record */[
                /* values */Config[/* initialState */1],
                /* error : None */0
              ];
      });
    newrecord[/* reducer */12] = (function (action, state) {
        if (typeof action === "number") {
          Curry._1(onSubmit, state[/* values */0]);
          return /* NoUpdate */0;
        } else if (action[0] >= 628324096) {
          return /* Update */Block.__(0, [/* record */[
                      /* values */state[/* values */0],
                      /* error */action[1]
                    ]]);
        } else {
          return /* Update */Block.__(0, [/* record */[
                      /* values */Curry._2(Config[/* handleChange */0], action, state[/* values */0]),
                      /* error */state[/* error */1]
                    ]]);
        }
      });
    return newrecord;
  };
  return /* module */[
          /* component */component,
          /* make */make
        ];
}

exports.Create = Create;
/* ReasonReact Not a pure module */
